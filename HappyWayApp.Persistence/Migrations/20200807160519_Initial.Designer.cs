// <auto-generated />
using System;
using HappyWayApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HappyWayApp.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200807160519_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocativeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocativeName = "Харькове",
                            Name = "Харьков"
                        },
                        new
                        {
                            Id = 2,
                            LocativeName = "Днепре",
                            Name = "Днепр"
                        });
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventPlaceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventPlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.EventMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SocialLink")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventMembers");
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.EventPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("EventPlaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            FacebookUrl = "https://www.facebook.com/happyway.club",
                            GoogleUrl = "https://g.page/HappywayKharkiv?share",
                            InstagramUrl = "http://instagram.com/happyway.date",
                            Name = "Trattoria \"Paparazzi\""
                        });
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Основная группа (Д. 24-38, М. 27-41)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Молодежная группа (Д. 18-27, М. 18-29)"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Старшая группа (Д. 35-42, М. 36-47)"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Старшая+ группа (Д. 40-57, М. 45-59)"
                        });
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.Like", b =>
                {
                    b.Property<int>("SourceMemberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetMemberId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SourceMemberId", "TargetMemberId");

                    b.HasIndex("TargetMemberId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Admin",
                            Password = "AQAAAAEAACcQAAAAEDC0aBikkZoMAQ9jtYq7ByukhA9ydl1YN0K6sIvHN9HYg09X1qxMUO+jjQhgxImCAg==",
                            PhoneNumber = "095 214 51 32",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Normal",
                            Password = "AQAAAAEAACcQAAAAEF2b5WTrHeYD99KTYodsb3E44gNLhSAvYOfEoVIxnxmUkmotABVzHbrnfXqDRB+4rg==",
                            PhoneNumber = "095 777 22 22",
                            RoleId = 2,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.Event", b =>
                {
                    b.HasOne("HappyWayApp.Persistence.Entities.EventPlace", "EventPlace")
                        .WithMany("Events")
                        .HasForeignKey("EventPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappyWayApp.Persistence.Entities.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.EventMember", b =>
                {
                    b.HasOne("HappyWayApp.Persistence.Entities.Event", "Event")
                        .WithMany("EventMembers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.EventPlace", b =>
                {
                    b.HasOne("HappyWayApp.Persistence.Entities.City", "City")
                        .WithMany("EventPlaces")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.Like", b =>
                {
                    b.HasOne("HappyWayApp.Persistence.Entities.EventMember", "SourceMember")
                        .WithMany("Likes")
                        .HasForeignKey("SourceMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappyWayApp.Persistence.Entities.EventMember", "TargetMember")
                        .WithMany("Liked")
                        .HasForeignKey("TargetMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyWayApp.Persistence.Entities.User", b =>
                {
                    b.HasOne("HappyWayApp.Persistence.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
